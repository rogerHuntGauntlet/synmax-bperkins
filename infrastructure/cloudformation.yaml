AWSTemplateFormatVersion: '2010-09-09'
Description: 'Ship Micro-Motion Analysis System - Infrastructure'

Resources:
  # S3 Buckets
  ShipMMUploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ship-mm-uploads
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            AllowedOrigins:
              - '*'  # You should restrict this to your domain in production
            MaxAge: 3600
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfter30Days
            Status: Enabled
            ExpirationInDays: 30

  ShipMMResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ship-mm-results
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - '*'  # You should restrict this to your domain in production
            MaxAge: 3600
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfter7Days
            Status: Enabled
            ExpirationInDays: 7

  # DynamoDB Table
  ShipMMJobsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ShipMMJobs
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: jobId
          AttributeType: S
      KeySchema:
        - AttributeName: jobId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expiresAt
        Enabled: true

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ShipMM-LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ShipMMUploadsBucket.Arn
                  - !Join ['', [!GetAtt ShipMMUploadsBucket.Arn, '/*']]
                  - !GetAtt ShipMMResultsBucket.Arn
                  - !Join ['', [!GetAtt ShipMMResultsBucket.Arn, '/*']]
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                Resource: !GetAtt ShipMMJobsTable.Arn

  # IAM Role for Frontend API
  FrontendAPIRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ShipMM-FrontendAPIRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessForFrontend
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Join ['', [!GetAtt ShipMMUploadsBucket.Arn, '/*']]
                  - !Join ['', [!GetAtt ShipMMResultsBucket.Arn, '/*']]
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !GetAtt ShipMMUploadsBucket.Arn
                  - !GetAtt ShipMMResultsBucket.Arn
        - PolicyName: DynamoDBAccessForFrontend
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource: !GetAtt ShipMMJobsTable.Arn

  # IAM User for Deployment
  DeploymentUser:
    Type: AWS::IAM::User
    Properties:
      UserName: ShipMM-Deployment
      Policies:
        - PolicyName: DeploymentAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !GetAtt ShipMMUploadsBucket.Arn
                  - !Join ['', [!GetAtt ShipMMUploadsBucket.Arn, '/*']]
                  - !GetAtt ShipMMResultsBucket.Arn
                  - !Join ['', [!GetAtt ShipMMResultsBucket.Arn, '/*']]
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !GetAtt ShipMMJobsTable.Arn
              - Effect: Allow
                Action:
                  - lambda:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt LambdaExecutionRole.Arn
                  - !GetAtt FrontendAPIRole.Arn

  # Access Key for Deployment User
  DeploymentUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DeploymentUser

Outputs:
  ShipMMUploadsBucketName:
    Description: Name of the S3 bucket for uploads
    Value: !Ref ShipMMUploadsBucket

  ShipMMResultsBucketName:
    Description: Name of the S3 bucket for results
    Value: !Ref ShipMMResultsBucket

  ShipMMJobsTableName:
    Description: Name of the DynamoDB table for job tracking
    Value: !Ref ShipMMJobsTable

  LambdaExecutionRoleARN:
    Description: ARN of the Lambda execution role
    Value: !GetAtt LambdaExecutionRole.Arn

  FrontendAPIRoleARN:
    Description: ARN of the Frontend API role
    Value: !GetAtt FrontendAPIRole.Arn

  DeploymentUserAccessKey:
    Description: Access Key ID for deployment user
    Value: !Ref DeploymentUserAccessKey

  DeploymentUserSecretKey:
    Description: Secret Access Key for deployment user
    Value: !GetAtt DeploymentUserAccessKey.SecretAccessKey 